# #################################################################### #
# (1) 此脚本用于分析开源工具jemalloc生成的heap文件
# 
# (2) 配置../config/je_config.cfg中的参数，并运行此脚本
# 
# (3) ex. ./je_anlys.sh plat=hi3519dv500 heap_dir=/share/$USER/heap
# 
# (4) 使用的heap文件数量间隔选取小部分即可，过多heap文件会导致分析速度变慢
# #################################################################### #

#!/bin/bash

set -e

script_path=$(readlink -f "$0")
script_dir=$(dirname "$script_path")
project_dir=${script_dir}/../..

source ${project_dir}/script/shell/info.sh
source ${project_dir}/script/config/je_config.cfg

set_var() {
    case $1 in
        plat=*|heap_dir=*)
            local var_name="${1%%=*}"
            local var_value="${1#*=}"
            eval "$var_name='$var_value'"
            ;;
        *)
            info_red "Unknown parameter: $1"
            error_exit_print "-10"
            ;;
    esac
}

for arg in "$@"; do
    set_var "$arg"
    shift
done

if  ! test -r ${heap_dir}; then
    info_red "${heap_dir}: No read permission"
    error_exit_print "-30"
fi

if [ ! -f ${binary_file} ]; then
    info_red "${binary_file}: Does not exist"
    error_exit_print "-40"
fi

heap_file_name=$(find ${heap_dir} -type f -name '*.heap' | head -n 1)
extension=".heap"

# 分析报告文件路径
anlys_result_dot_dir="${project_dir}/anlys_result/${plat}/dot"
anlys_result_txt_dir="${project_dir}/anlys_result/${plat}/txt"

# 用rev反转文件路径字符串，以.作为定界符，选择进程号字段然后cut，最后再用rev命令将结果反转回来
pid=$(echo "${heap_file_name}" | rev | cut -d '.' -f 4 | rev)

mkdir -p ${anlys_result_dot_dir} -m 777 && rm -rf ${anlys_result_dot_dir}/*
mkdir -p ${anlys_result_txt_dir} -m 777 && rm -rf ${anlys_result_txt_dir}/*

# 查找目录下以.heap 结尾的文件
for heapFile in "${heap_dir}"/*"${extension}"; do
    pid_temp=$(echo "${heapFile}" | rev | cut -d '.' -f 4 | rev)
    if [[ ${pid_temp} != ${pid} ]]; then
        info_red "Heap files are generated by different processes"
        exit "-50"
    fi

    dump_count=$(echo "${heapFile}" | rev | cut -d '.' -f 3 | rev)

    if [ "hi3519dv500" == ${plat} ]; then
        anlys_cmd="jeprof --show_bytes ${binary_file} ${heapFile} \
            --lib_prefix=${share_library} \
            --tool=/opt/aarch64-linux-gnu-hi3519dv500-v2/bin/aarch64-linux-gnu-hi3519dv500-v2-"
    elif [ "x86" == ${plat} ]; then
        anlys_cmd="jeprof --show_bytes ${binary_file} ${heapFile} \
            --lib_prefix=${share_library}"
    fi

    if [ "true" == ${dot_enable} ]; then
        ${anlys_cmd} \
        --dot > ${anlys_result_dot_dir}/report_${dump_count}.dot
    fi

    if [ "true" == ${txt_enable} ]; then
        ${anlys_cmd} \
        --text --cum > ${anlys_result_txt_dir}/report_${dump_count}.txt
    fi
done

python3 ${project_dir}/script/python/heapResMerge.py ${plat} ${anlys_result_txt_dir}
